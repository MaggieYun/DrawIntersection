package net.yhte.gis.xzyun.cores;

import java.io.IOException;

/**
 * @author 许照云
 *
 */
public class StartDownTile{
	

private static String address = "http://emap0.mapabc.com/mapabc/maptile?v=w2.61&x=";
	/**
	 * 
	 * @param levelOfDetail1 等级范围中较小的等级
	 * @param levelOfDetail2 等级范围中较大的等级
	 * @param latitude1 左下角的纬度
	 * @param longitude1 左下角的经度
	 * @param latitude2 右上角的纬度
	 * @param longitude2 右上角的经度
	 * @throws IOException 抛出输入输出异常
	 */

	// 不用static静态方法
	public static void startdowntile(int levelOfDetail1, int levelOfDetail2, double latitude1,
			double longitude1, double latitude2, double longitude2)
			throws IOException {
		long picNum = 0; // 每一等级要下载的图片数量
		long num = 0; // 总共要下载的图片数量
		long count = 0; // 下载计数，可用于进度条
		String progress; // 用于计算下载进度

		// 计算总共要下载的图片的数量
		for (int lv = levelOfDetail1; lv <= levelOfDetail2; lv++) {

			Pixel pixel1 = GetPixel.LatLongToPixelXY(latitude1, longitude1,lv);
			Tile tile1 = GetTile.PixelXYToTileXY(pixel1.x, pixel1.y);

			Pixel pixel2 = GetPixel.LatLongToPixelXY(latitude2, longitude2,lv);
			Tile tile2 = GetTile.PixelXYToTileXY(pixel2.x, pixel2.y);

			picNum = (tile2.x - tile1.x + 1) * (tile1.y - tile2.y + 1);
			num += picNum;
			System.out.println("要下载的图片数量为：" + num);
		}

		// 开始下载任务
		for (int lv = levelOfDetail1; lv <= levelOfDetail2; lv++) {

			Pixel pixel1 = GetPixel.LatLongToPixelXY(latitude1, longitude1,lv);
			Tile tile1 = GetTile.PixelXYToTileXY(pixel1.x, pixel1.y);

			Pixel pixel2 = GetPixel.LatLongToPixelXY(latitude2, longitude2,lv);
			Tile tile2 = GetTile.PixelXYToTileXY(pixel2.x, pixel2.y);

			picNum = (tile2.x - tile1.x + 1) * (tile1.y - tile2.y + 1);

			for (int i = tile2.y; i <= tile1.y; i++) {
				String dirName = "c:/" + "AllLayers/" + "L" + lv + "/" + "y"
						+ i + "";
				CreateFileUtil.createDir(dirName); // 需要完善 尝试不引用别的类的方法

				for (int j = tile1.x; j <= tile2.x; j++) {
					String base = address + j + "&y=" + i + "&z=" + lv + "&s=";
					System.out.println(base);
					String fileName = dirName + "/" + "x" + j + ".png";
					count++; // 要考虑图片数量巨大时，可下载多张显示一次进度
					progress = count + "/" + num;
					System.out.println("下载进度为：" + progress);

					// TileSystem2 tileSystemDown=new TileSystem2();
					// //要不要使用静态方法？
					// tileSystemDown.download(base, fileName);
					// //变量名与原方法中变量名一样会不会不规范

					DownLoadFile.download(base, fileName);
				}
			}
		}

	}
}