import Image
import sqlite3
import os
import string,cStringIO

try:
    from sqlite import encode, decode
except ImportError:
    import base64
    sqlite3.encode = base64.encodestring
    sqlite3.decode = base64.decodestring
else:
    sqlite3.encode = encode
    sqlite3.decode = decode

def init_db(path,name):
	conn = sqlite3.connect(path + os.sep + name + ".sqlite")
	c = conn.cursor()
	c.execute('''select count(*) from sqlite_master where type='table' and tbl_name='layer' ''')
	if c.fetchall()[0][0] == 0:
		c.execute('''create table layer (z,x,y,data)''')
	conn.commit()
	c.close()
	return conn

def get_lvlist(path):   
	lvlist=[]
	if os.path.isdir(path):
		dirs = os.listdir(path)
		for lvdir in dirs:
			newpath=os.path.join(path,lvdir)
			lvlist.append(newpath)
	return lvlist	

def loop(path):
	tilelist=[]
	width,height = 0,0
	if os.path.isdir(path):
		dirs = os.listdir(path) 
		height = len(dirs) 
		for c_dir in dirs:
			width = loop(os.path.join(path,c_dir))[1] 
			tilelist+=loop(os.path.join(path,c_dir))[2] 
	else:
		print path
		tilelist.append(path)
	print tilelist,width,height	
	return (width,height,tilelist)
	


def save_img(img_path,db_path,db_name): 
	conn = init_db(db_path,db_name)
	c = conn.cursor()
	firstdir=get_lvlist(img_path)
	width=height=0
	tilelist=[]
	for content in firstdir:
		width,height,tilelist=loop(content)	
		n=0    
		for i in range(height):
			for j in range(width):
				par=[]
				par=tilelist[n].split(os.sep)
				z=int(par[2][1:])
				row=int(par[3][1:],16)
				col=int(par[4][1:8],16)


				inn = cStringIO.StringIO()
				Image.open(tilelist[n]).save(inn,"png")


				sql = "insert into layer (z,x,y,data) values (%d,%d,%d,?)"%(z,col,row)
				print n,i,j,tilelist[n]
				c.execute(sql, (sqlite3.Binary(inn.getvalue()),))
				conn.commit()
				n=n+1
	c.close()			

if __name__ == "__main__":
	save_img(r'c:\all',r'G:\pySaveImg','xuzhaoyun')
	
	

